import java.util.Scanner;
import java.util.LinkedList;
import java.util.Queue;
class Main{
  static Node root = null;
  public static void append(int val){
    Node nn = new Node(val);
    if(root == null)
      root = nn;
    else{
      Queue<Node> q = new LinkedList<>();
      q.offer(root);
      while(!q.isEmpty()){
        Node temp = q.poll();
        if(temp.left == null){
          temp.left = nn;
          return;
        }
        else
          q.offer(temp.left);
        if(temp.right == null){
          temp.right = nn;
          return;
        }
        else
          q.offer(temp.right);
      }
    }
  }
  public static void inorder(Node temp){
    if(temp!=null){
      inorder(temp.left);
      System.out.print(temp.data+" ");
      inorder(temp.right);
    }
  }
  public static void preorder(Node temp){
    if(temp!=null){
      System.out.print(temp.data+" ");
      preorder(temp.left);
      preorder(temp.right);
    }
  }
  public static void postorder(Node temp){
    if(temp!=null){
      postorder(temp.left);
      postorder(temp.right);
      System.out.print(temp.data+" ");
    }
  }
  public static void main(String[] args){
    Scanner in = new Scanner(System.in);
    while(true){
      int val = in.nextInt();
      if(val == -1)
        break;
      append(val);
    }
    inorder(root);
    System.out.println();
    preorder(root);
    System.out.println();
    postorder(root);
  }
}
class Node{
  int data;
  Node left,right;
  Node(int val){
    this.data = val;
    this.left = null;
    this.right = null;
  }
}
